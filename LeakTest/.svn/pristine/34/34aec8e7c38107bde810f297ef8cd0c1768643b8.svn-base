/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class android_serialport_api_SerialPort */

#ifndef _Included_com_cnlaunch_physics_serialport_SerialPort
#define _Included_com_cnlaunch_physics_serialport_SerialPort
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_cnlaunch_physics_serialport_SerialPort
 * Method:    open
 * Signature: (Ljava/lang/String;II)Ljava/io/FileDescriptor;
 */
JNIEXPORT jobject JNICALL Java_com_cnlaunch_physics_serialport_SerialPort_open
  (JNIEnv *, jclass, jstring, jint, jint);

/*
 * Class:     com_cnlaunch_physics_serialport_SerialPort
 * Method:    close
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_cnlaunch_physics_serialport_SerialPort_close
  (JNIEnv *, jobject);

/*
 * Class:     com_cnlaunch_physics_serialport_SerialPort
 * Method:    serialPortCheck
 * Signature: ()b;
 */
JNIEXPORT jint JNICALL Java_com_cnlaunch_physics_serialport_SerialPort_serialPortCheck
  (JNIEnv *, jclass);
/*
*Class : com_cnlaunch_physics_serialport_SerialPort
*Method : tcflush
*Signature ()V
*/
JNIEXPORT void JNICALL Java_com_cnlaunch_physics_serialport_SerialPort_tcflush
	(JNIEnv *, jobject);
	/*
*Class : com_cnlaunch_physics_serialport_SerialPort
*Method : openHardwareFlowControl
*Signature ()V
*/
JNIEXPORT void JNICALL Java_com_cnlaunch_physics_serialport_SerialPort_openHardwareFlowControl
	(JNIEnv *, jobject);
/*
 * HTT use
 * Class:     com_cnlaunch_physics_serialport_SerialPort
 * Method:    getReadBufferByte
 * Signature: ()b;
 */
JNIEXPORT jint JNICALL Java_com_cnlaunch_physics_serialport_SerialPort_getReadBufferByte(JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
